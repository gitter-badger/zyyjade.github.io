[
  {
    "permalink": "/post/PC-program.html",
    "title": "Hugo+Next+GitHub 打造个人博客",
    "content": "本博客基于 Windows 10 64bit 系统，采用 Hugo 语言 + Next 主题，使用 Git 工具和 GitHub 桌面版实现本地建站和 GitHub Pages 远程托管等操作。\n前言 自从在 GitHub 上面 Fork 了一个网址导航项目，就对博客产生了好奇心，纯文科生，只是比少部分文科生懂多一点电脑，于是就开始折腾起来了，真的是好奇害死猫啊！刚开始选的是 Hexo ，但是折腾了好久，对主题设置过于精细，我放弃了……接着又发现了另一种静态网站生成语言 Hugo ，听说很简单，确实比 Hexo 简单的多（我指的是生成站点），主题也一样折腾，但是总算功夫不负有心人，主题从 Papermod\r-\u0026gt; LoveIt\r-\u0026gt; DoIt\r-\u0026gt; Next\r一直折腾，我总算成功了！😭😭😭\n我的博客 ：https://zyyjade.github.io/\n下面我将按步骤分享这次经历，并分享我在其中遇到的问题，以及是如何解决问题的，在此之前，先说明操作中所用到的所有工具以及作用。\n名称 作用 浏览器 任意能够上网的浏览器即可，我习惯 Firefox国际版\rHugo\r本地静态网页生成器，建立博客 Git\r代替本地命令提示符，操作方便 GitHub 访问工具 1、\rFast GitHub\r，内嵌在浏览器中2、\rSteamcommunity\r，作为 .exe 启动二选一，GitHub访问经常崩溃 GitHub 桌面版\rGit 同步到 GitHub 需要好多命令字符，桌面版复制粘贴即可 路过图床\r高速稳定的图片上传和外链服务 Typora 破解版 官网\r，Markdown 文件编辑器和阅读器 Step1 安装工具 Hugo 的安装很简单，只需要去 Hugo Release\r下载操作系统对应的二进制文件即可，最好是下载 extended 版本的，如我下载的是 hugo_extended_0.101.0_Windows-64bit.zip ，因为很多主题都需要这个版本的支持，下面是我的操作细化版：\n步骤 内容 要点 1 新建文件夹 新建主文件夹，路径如 D:\\Hugo ;\n新建子文件夹，路径如 D:\\Hugo\\bin 。 2 下载 Hugo 下载最新版本 Hugo Releases\r；解压并复制所有内容到 D:\\Hugo\\bin 文件夹。 3 设置环境变量 复制 D:\\Hugo\\bin 文件夹路径 ；我的电脑 -\u0026gt; 右键选择属性 -\u0026gt; 高级 -\u0026gt; 环境变量 -\u0026gt;系统变量；点击 Path -\u0026gt; 选择编辑 -\u0026gt; 新建 -\u0026gt; 粘贴复制的文件夹路径；按住 Win+R ，输入 cmd ，输入 hugo version 检测是否成功。— 若出现 Hugo 版本号，则表示安装成功；— 若出现其它内容，则重复检查以上内容。 4 下载 Git 进入官网，根据系统下载最新版本的 Git ；根据提示一直 next 安装 Git ；按住 Win+R ，输入 cmd ，输入 git version 检测是否成功。— 若出现 Git 版本号，则表示安装成功；— 若出现其它内容，可能需要重新安装。 💡 若桌面没有我的电脑，设置环境变量时可选择右键单击开始按钮 -\u0026gt; 点击系统 -\u0026gt; 拉至最后选择高级系统设置 -\u0026gt; 高级 -\u0026gt; 环境变量 -\u0026gt; 系统变量。\n💡 正常安装 Git 会默认设置在环境变量 Path 中，如果 cmd 没有检测到 Git 版本号，则需要手动将 Git 的安装路径加入到环境变量中。\nStep2 创建站点 在创建的主文件夹 D:\\Hugo 中，右键单击 Git Bash Here ，输入以下命令：\n1 hugo new site blog 随后会自动生成一个名为 blog 的文件夹， 即你的博客站点所在的目录，也是这个站点的根目录，其目录结构如下：\n目录 作用 archetypes/ 存放创建文件时使用的模板，可以自定义 front matter 属性 content/ 存放各种 md 文件，用于部署站点，可自行创建若干个子目录，便于文章分类，这些子目录被称为 section data/ 存放用于定义变量的模板文件，相当于Java里的常量类，有 JSON 、 YAML 或TOML 三种格式，生成站点时用到，一般用不到该功能 layouts/ 存放模板文件，用于渲染 html 页面，可定义不同页面的 html 代码 static/ 存放静态内容，如图片、CSS 、JavaScript 等 themes/ 存放主题文件夹，用于修改主题配置 config.toml 配置文件，有 JSON 、 YAML 或TOML 三种格式。 💡 如果你担心一个 blog 文件夹后面的操作担心出错，可以使用上面的命令，把 blog 改为其它单词，如 sites ，再创建几个站点文件夹，导入主题的时候分别放入不同的文件夹，就不怕冲突啦（因为有的主题会直接覆盖掉根目录的数据，换主题的时候不是很方便，所以我选择的多创建几个文件夹，然后放置不同的主题到不同的文件夹。\nStep3 添加主题 其实 Papermod、LoveIt、DoIt 我都用过，但是不知道为啥一直调试都调不到我想要的效果，而我又不会更多的编程语言了，百度不止一下都解决不了我的问题，差点就放弃了，后来无意中发现了 Next 主题，之前使用 Hexo 建站的时候见过这个主题，就很喜欢，看到有大神迁移到了 Hugo ，真的是太好了！\n以我使用的 Next\r主题为例，进入站点根目录，右键单击 Git Bash Here ，依次输入以下命令：\n1 git init 1 git submodule add https://github.com/hugo-next/hugo-theme-next.git themes/hugo-theme-next 1 cp -r themes/hugo-theme-next/exampleSite/* . 1 rm -rf config.toml 1 hugo server -D 完成后即可在浏览器上输入地址 http://localhost:1313/ 访问个人站点，该命令仅用于本地调试，支持热修改，也就是说在启动服务时，修改文章和配置文件会实时生效，但是该命令不会真正生成静态文件。\n💡 添加主题时，如果出现 Failed 字眼，可能是访问 GitHub 的网络环境不太好，此时重新输入该条命令试试。\nStep4 主题配置 Next\r主题比较符合我的需求，而且界面也比较简洁，修改它的配置需要打开根目录的 config.yaml 。如果你的本地调试服务关了，那就重新输入上面的最后一条命令，打开本地调试服务，然后左边打开你的浏览器，右边打开你的配置文件，一边修改一边看效果，它的配置文件有中文说明，所以对国人修改较为友好，个性化设置结合个人需求配置。\n至于主题升级，目前还没进行该操作，因为目前使用的是最新版本的 Next 主题，官方也给出了方案，在站点目录依次输入以下命令：\n1 cd hugo-next-exmaple 1 git submodule update --remote 💡 关于配置术语，我现在也算是看得明白一点了，如果不需要该项内容，就在英文字母前面加 # 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #示例 menus: main: - identifier: home name: 首页 pageref: / pre: home weight: 1 # identifier: about #name: 关于 #pageref: /about.html #pre: user #weight: 2 # identifier: flinks #name: 站点示例 #pageref: /flinks.html #pre: thumbs-up #weight: 3 💡 关于图片地址，建议使用图床工具，一来云端储存，不会太过占用存储空间，上传速度也会快点；二来也避免修改路径时位置不对，导致修改失败的问题。\n💡 关于评论插件，不知道是不是我的设置有问题，在本地调试的时候能看到，放到 GitHub Pages 的时候就看不到了，目前评论系统并非我博客的必需品，所以暂时先忽略。\nStep5 发表文章 在站点根目录，右键单击 Git Bash Here ，依次输入以下命令：\n1 hugo new posts/first.md 该命令会在 content/posts 目录下生成 first.md 文件，打开进行编辑：\n1 2 3 4 5 --- date: 2020-09-08T21:57:28+08:00 --- ## First First blog. 其中两行 --- 的属性是 Front matter ，用来设置当前文章的属性配置，Next 主题可以直接在 Front matter 添加内容，其所有前端参数在文章中的描述如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 -- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; description: \u0026#34;{{ .Name }}\u0026#34; keywords: \u0026#34;{{replace .Name \u0026#34;-\u0026#34; \u0026#34;,\u0026#34;}}\u0026#34; date: {{ .Date }} lastmod: {{ .Date }} categories: - tags: - - # Post\u0026#39;s origin author name #author: # Post\u0026#39;s origin link URL #link: # Image source link that will use in open graph and twitter card #imgs: # Expand content on the home page #expand: true # It\u0026#39;s means that will redirecting to external links #extlink: # Switch to enabled or disabled comment plugins in this post #comment: # enable: false # Enable table of content #toc: false # Absolute link for visit #url: \u0026#34;{{ lower .Name }}.html\u0026#34; # Sticky post set-top in home page and the smaller nubmer will more forward. #weight: 1 --- 或者你也可以把需要的内容复制到根目录的 archetypes\\default.md 中，这样每次启用命令生成文章时就会自动出现在文章头部。\n💡 Front matter 可以用 Yaml 、TOML 、JSON 三种格式来定义，两行 --- 之间对应的是 YAML 格式，两行 +++ 之间对应的是 TOML 格式，{ 和 }之间对应的是 JSON 格式。\n💡 Next 主题的 Front matter 不一定适用于其他主题，如果你的主题启动本地调试时，提示 Yaml \u0026hellip; md 类似的字眼时，可能是因为其格式问题，此时可以上网搜索在线格式转换格式工具，将 Yaml 格式转换成另外两种格式试试。\n💡 关于图片地址，同理建议使用图床工具，理由同上。\n💡 关于 draft 草稿，要记得修改为 false ，否则不会发布到网页。\n💡 其他 Markdown 技巧有待摸索，有时间会发布新文章说明。\nStep6 生成静态页面 在站点根目录，右键单击 Git Bash Here ，输入以下命令：\n1 hugo 默认会在站点根目录的 public/ 目录下生成对应的静态页面，该命令生成的静态页面文件是用来部署到 GitHub pages 服务的。\n💡 每次配置文件有更新时，记得要输入以上命令，同步到 public/ 目录。\nStep7 发布静态网页 我选择的是 GitHub Pages ，一是它无需服务器，无需域名解析等繁琐的操作，二是之前操作过导航网页的生成，对 GitHub Pages的操作较为熟悉，其它的诸如 Coding pages 我尚未了解，以下是我的操作细化版：\n步骤 内容 要点 1 账号注册/登录 进入 GitHub\r官网，点击 Sign up ，根据提示注册账号若已注册，则选择右上角的 Sign in ，登录 GitHub 。 2 创建新仓库 点击头像，选择 Your repositories 进入仓库；点击绿色按钮 New 新建仓库；填写 Repository name *勾选 Add a README file ；点击绿色按钮 Create Repository 创建新仓库。 3 GitHub 桌面版\r下载安装后，进入界面后选择 Clone a Repository ；选择刚刚建立的 Your repositories 仓库；确定 Local path 的位置；复制 public/ 目录下的所有内容到上面的位置；回到桌面版完成以下操作，即可部署到 GitHub 。 上传成功后，进入仓库刷新一下，然后发现文件都上传到仓库了，接着点击 Setting -\u0026gt; Pages ；点击Branch 选择 main ，选择 save 保存；等待几分钟后刷新页面，出现 GitHub Pages，网址就出现了。\n💡 Repository name *：填写 owner.github.io ，生成 http://owner.github.io\r一级域名，因为生成二级域名有可能会导致侧边栏头像下面的日志、标签、分类打开时会变成 404\n💡 仓库名可进入仓库的 Setting -\u0026gt; General -\u0026gt; Repository name -\u0026gt; Rename 修改。\n💡 如果你进入 GitHub Pages 的网址发现没有内容，先检查一下仓库 -\u0026gt; Actions ，看一下是否 pages-build-deployment 是否已经显示 ✅ 状态，如果否，请稍等片刻再刷新网页；如果是，则要检查一下本地网页是否存在配置问题。\n💡 当然你也可以选择 Git 远程部署方式，只要新建仓库的时候不要勾选 Add a README file ，然后就会出现一个命令界面，根据操作即可，我选择 GitHub 桌面版是因为它的操作步骤比较简单快捷。\n💡 同时记得修改配置文件 config.yaml 中 baseURL 的地址。\n结语 以上就是基于 Hugo + Next 主题建立个人博客的全过程了，很多步骤我都细化了，其实使用 Hugo 建立站点还是蛮快的，欢迎大家交流学习。\n参考内容： Hugo 快速建站\rNext 主题文档\r",
    "date": "2022-08-28T09:53:56+08:00",
    "updated": "2022-08-28T09:53:56+08:00"
  }, 
  {
    "permalink": "/post/PC-software.html",
    "title": "常用电脑软件清单",
    "content": "此清单为自用软件的合集，如果你也有同样的需要，可以点击链接下载，列出清单的主要原因包括：一是现在软件更新换代很快，可以实时结合自己的需求增加或删减不需要的软件；二是软件在某一时间段内一般稳定使用，链接存储在本地不方便，也不想占用书签收藏夹的空间，所以清单是个好的选择。\n💡 类别说明：带 * 为免费的开源软件；带 $ 为需要破解或广告多的闭源软件；不带任何符号为商用免费的闭源软件。\n💡 备注说明：便携版为无需安装 .exe 应用程序的版本，简单方便，无需占用注册表；绿色版为无广告版本；破解版为商业收费的软件；UWP 版本为微软商店内的应用程序。\n一、图形设计 类别 安装与介绍 备注 图片管理 $ 看图王\r，速度超快且格式兼容超多的高清看图软件 绿色版\r截图工具 $ FastStone Capture\r，屏幕捕捉、滚动截屏、屏幕录制等 破解版\r设计软件 $ Adobe\r，集图像、视频、文档等编辑于一体的工具，\n破解版需关注博主 Vposy 破解版\r设计软件 $ CorelDraw\r，绘制矢量图片、调整布局、编辑图片等 破解版x8\r破解版2018\r破解版2019\r破解版2020\r破解版2021\r破解版2022\r二、媒体工具 类别 安装与介绍 备注 音乐播放 * MusicPlayer2\r，本地音乐播放器 备用\r音乐播放 酷狗音乐\r，在线音乐播放器 音乐标签 MusicTag\r，完善音乐的标题、歌词、艺术家等歌曲信息 视频播放 Potplayer\r，强大的电脑影音视频播放器，推荐便携版 👍 便携版\r三、应用软件 类别 安装与介绍 备注 Office 插件 $ Office Tab\r，Office 多标签管理插件，提升效率 破解版\rOffice 插件 $ 方方格子\r，强大的 Excel 工具箱 破解版\r文档编辑 $ Microsoft Office\r，常用组件有 Word 、Excel 、PowerPoint 等 破解版2016\r破解版2019\r文档编辑 WPS Office\r，一站式办公服务平台，兼容 Word 、Excel 、PPT 文档编辑 $ Typora\r，Markdown 编辑器和阅读器 👍 破解版\r信息图 * Drawio\r，支持流程图绘制，基本可替代 Visio 和亿图图示等 👍 信息图 $ MindMaster\r，支持思维导图绘制 便携版\r电子书 Calibre\r，功能强大且易于使用的电子书管理器 👍 聊天通讯 QQ\r，腾讯旗下的基于互联网的即时通信软件 聊天通讯 微信\r，腾讯旗下的基于互联网的即时通信软件 四、系统工具 类别 安装与介绍 备注 系统镜像 MSDN 新站\r，提供 Windows 系统镜像 系统重装 优启通\r，以 U 盘作为使用载体的系统预安装环境（ PE ） 系统激活 * CMWTAT\r，Win10 数字权利（数字许可证）激活工具 备用\r系统激活 * HEU KMS Activator\r，提供 Windows 激活和 Office 激活 系统优化 * Dism ++\r，Windows 系统管理优化工具，系统重装后优化系统设置 👍 系统美化 * TranslucentTB\r，Windows 任务栏半透明/透明 UWP版\r解压缩 $ Bandizip\r，包罗万象的压缩、解压、浏览、编辑归档器 破解版\r输入法 搜狗输入法\r，汉字输入法工具 安全杀毒 360 安全卫士极速版\r，无弹窗无广告 内存清理 * Mem Reduct\r，监控和清理计算机上的系统内存 备用\r软件卸载 Geek Uninstaller\r，电脑软件彻底卸载，清除残留 👍 文件管理 * Qttabbar 汉化版\r，Windows 资源管理器文件夹多标签管理 👍 原版\r文件搜索 Everything\r，基于名称快速定位文件和文件夹 👍 缩略图 Icaros\r，让资源管理器显示更多文件类型的预览缩略图 右键管理 * Context Menu Manager\r，Windows 右键菜单管理程序 复制增强 * Ditto\r，Windows 剪贴板扩展，可存储复制的内容 👍 重命名 ReNamer\r，强大和灵活的文件重命名工具 五、编程开发 类别 安装与介绍 备注 版本控制 * Git\r，快速、可扩展、分布式的修订控制系统，具有异常丰富的命令集 👍 网站开发 * Hugo\r，开源静态站点生成器之一 部署托管 * GitHub Desktop\r，部署托管到 GitHub Pages 文本编辑 * Notepad2\r，轻量级的基于 Scintilla 的 Windows 文本编辑器 👍 六、网络工具 类别 安装与介绍 备注 浏览器 * Microsoft Edge\r，基于 Chromium 内核，支持拓展和油猴脚本 👍 浏览器 * Firefox 国际版\r，基于 Gecko 内核，支持拓展和油猴脚本 👍 网络备份 * MozBackup\r，Firefox 和 Thunderbird 备份工具 文件共享 百度网盘\r，提供个人云存储、文件共享等功能 文件共享 阿里云盘\r，提供个人云存储、文件共享等功能 加速访问 Steamcommunity\r，修改 hosts ，访问 GitHub 等社区 👍 下载工具 $ Internet Download Manager\r，强大的多线程网络下载工具 👍\n搭配浏览器插件 IDM Integration Module\r使用 破解版\r下载工具 * N_m3u8DL-CLI\r，简单易用的 m3u8 视频下载器，\n搭配浏览器拓展 HLS Downloader\r使用 本文链接仅做分享交流，商用请支持正版！\n请联系 Hannah_zyy@163.com\r，侵权删！\n",
    "date": "2022-08-28T14:18:58+08:00",
    "updated": "2022-08-28T14:18:58+08:00"
  }, 
  {
    "permalink": "/post/hello-word/",
    "title": "Hello Word",
    "content": "\rHugo\r是现今世界上最快的网站建设框架，也是最流行的开源静态站点生成器之一。 凭借其惊人的速度和灵活性，Hugo 让建设网站再次变得有趣起来。\n快速开始 发表新文章 1 $ hugo new hello-world.md 更多信息：\r内容格式\r启动服务 1 $ hugo server 更多信息：\rHugo 服务命令行\r生成静态文件 1 $ hugo 更多信息：\rHugo 建站\r部署到服务器 1 $ hugo deploy 更多信息：\rHugo 发布\r祝你好运，相信你会喜欢上 Hugo 建站的旅程！\n",
    "date": "2022-08-28T08:44:00+08:00",
    "updated": "2022-08-28T08:44:00+08:00"
  }, 
  {
    "permalink": "/post/shortcodes.html",
    "title": "自定义短语示例",
    "content": "虽然 Markdown 语法已经非常丰富能够满足我们写文章的绝大部分需求，但是为更好的对文章内容进行更友好的排版，为引设计一套自定义的短语，便于在使用时能够快速引用。\n块引用 在引用一些经典名言名句时，可以采用此短语，语法参考如下：\n1 2 3 4 {{\u0026lt; quote \u0026gt;}} ### block quote 写下你想表达的话语！ {{\u0026lt; /quote \u0026gt;}} 实际效果：\n希望是无所谓有，无所谓无的，这正如地上的路。\n其实地上本没有路，走的人多了，也便成了路。\n鲁迅\n信息块 支持 default，info，success，warning，danger 等五种不同效果的展示，语法参考如下：\n1 2 3 4 {{\u0026lt; note [class] [no-icon] \u0026gt;}} 书写表达的信息 支持 Markdown 语法 {{\u0026lt; /note \u0026gt;}} 实际效果：\nDefault Header without icon Welcome to Hugo NexT!\rDefault Header Welcome to Hugo NexT!\rInfo Header Welcome to Hugo NexT!\rSuccess Header Welcome to Hugo NexT!\rWarning Header Welcome to Hugo NexT!\rDanger Header Welcome to Hugo NexT!\r",
    "date": "2022-08-06T14:41:50+08:00",
    "updated": "2022-08-06T14:41:50+08:00"
  }, 
  {
    "permalink": "/about.html",
    "title": "关于 Hugo NexT 组织",
    "content": "Hugo NexT 组织是由众多喜爱 NexT 主题及风格的世界各地友人共同组建而成，为的就是让这个主题继续在 Hugo 引擎中也能得到发扬光大，在此也欢迎你的加入！\n我们的愿景 延续 NexT 经典的黑白调搭配，保持简单的易用性及强大的功能。\n使用反馈 加入 GitHub Discussions\r或 Gitter\r在线讨论 🍻 GitHub Issues\r提交错误报告 🐛 GitHub Feature\r表新功能的想法 ✨ 同时国内用户也可加入 QQ 群交流： 604710815\n",
    "date": "2022-06-09T20:12:52+08:00",
    "updated": "2022-06-09T20:12:52+08:00"
  }, 
  {
    "permalink": "/post/table-of-content.html",
    "title": "文章目录导航",
    "content": "巴顿将军说过：“衡量一个人是否成功，不是看他站到顶峰，而是从顶峰跌落之后的反弹力”，褚时健的人生便是如此，中年发家致富，名利双收，之后又跌落到谷底，等到74岁再创业，10年后带着褚橙归来，东山再起收获亿万财富，他的发展轨迹就是反弹的过程。\n早年的故事 起始 2014年的春天，在云南省华宁县和宜良县的交界处，一座名叫矣则的小山村里，一处已经有上百年历史的古旧四合院宅子被拆掉。村委会正带领村民们进行“美丽乡村”的建设，一年以后，旧有村居将再也看不到，代之而起的是钢筋混凝土的新式民居。就像10年、20年前中国大小城市的改造一样，这个群山围绕的小村子也开始陷入“工地模式”。\n童年浪花 在江河边长大的孩子几乎都有一个当仁不让的特长：善水。褚时健也不例外，他不仅从小就在南盘江和花鱼塘里扑腾出了上佳的游泳技术，五六岁已经可以一个猛子扎出老远，而且从七八岁就可以在南盘江和河滩上的鱼塘里捉鱼了。\n少年故事 褚时健在乡村自由自在生活的十多年，其实正是中国社会风雨飘摇的十多年。特别是1937年卢沟桥事变后，日本人发动全面侵华战争，短短两三年间，中国的大部分国土相继沦陷\n激情的青春十年 当上了游击队员 1948年夏天，褚时健回乡，在禄丰车站小学做了一名老师，同时也和褚时仁、褚时杰一起继续保持与共产党组织的联系，做一些传递情报的工作\n战火纷飞 因为战斗力相较悬殊，所以游击队只能是靠打一枪换一个地方的办法，专找敌人薄弱的地方攻击，但更多时候，都是在防御和转移阵地。\n生活的断层 跌入生活底层 “反右”运动中被打倒的人在“右派”身份确定后，只有一条路可走：下放到农场。农场名副其实，就是干农活儿的地方，必须过和农民一样的生活。\n尾声 岁月像一条河 2015年，是褚时健和马静芬结婚60周年，被称为“钻石婚”的纪念年份。这简直是一份人生的奖赏,在中国离婚率愈益升高的当下，60年的婚姻，几乎就像一个前世之梦。一个甲子的相伴相随，褚时健和马静芬共同经历了国家和个人的各种风浪，共同面对过生死。他们两人已经不仅是夫妻，更是一对战友。尽管马静芬偶尔会对褚时健年轻时候的粗心抱怨上两句，但说到最后，她会说一句：“没有我就没有他，没有他也就没有我。”\n",
    "date": "2022-06-08T21:12:52+08:00",
    "updated": "2022-06-08T21:12:52+08:00"
  }, 
  {
    "permalink": "/post/syntax-highlighting.html",
    "title": "Hugo 内置的 Chroma 语法高亮",
    "content": "Hugo 通过 Chroma 提供非常快速的语法高亮显示，现 Hugo 中使用 Chroma 作为代码块高亮支持，它内置在 Go 语言当中，速度是真的非常、非常快，而且最为重要的是它也兼容之前我们使用的 Pygments 方式。\n以下通过 Hugo 内置短代码 highlight 和 Markdown 代码块方式分别验证不同语言的代码块渲染效果并能正确高亮显示，有关优化语法突出显示的更多信息，请参阅 Hugo 文档\r。\n编程语言 GO 199 200 201 202 203 204 205 206 207 208 func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case \u0026#34;go\u0026#34;: return strings.Title case \u0026#34;chicago\u0026#34;: return transform.NewTitleConverter(transform.ChicagoStyle) default: return transform.NewTitleConverter(transform.APStyle) } } Java 1 2 3 4 5 6 7 8 9 10 11 12 import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame frame.pack(); //Setting size to smallest frame.setLocationRelativeTo(null); //Centering frame frame.setVisible(true); //Showing frame } } Python 1 print \u0026#34;Hello, world!\u0026#34; Git 对比 1 2 3 4 5 6 7 8 9 10 *** /path/to/original \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line *** /path/to/original \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new \u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line 文件 Make 文件 CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. Markdown 文档 1 2 3 **bold** *italics* [link](www.example.com) 数据内容 JSON 数据 1 2 3 {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]} XML 内容 1 2 3 4 5 \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt; SQL 查询 1 2 3 4 SELECT column_name,column_name FROM Table WHERE column_name = \u0026#34;condition\u0026#34; 除以上列举的代码高亮显示外，还支持诸如：C 语言、C++、HTML、CSS、Shell脚本等各主流的代码语言高亮显示，可自行测试效果。\n",
    "date": "2022-06-07T19:09:52+08:00",
    "updated": "2022-06-07T19:09:52+08:00"
  }, 
  {
    "permalink": "/post/emoji-support.html",
    "title": "支持 Emoji 表情",
    "content": "Emoji 可以通过多种方式在 Hugo 项目中启用。\nemojify\r方法可以直接在模板中调用, 或者使用\r行内 Shortcodes\r.\n要全局使用 emoji, 需要在你的\r网站配置\r中设置 enableEmoji 为 true， 然后你就可以直接在文章中输入 emoji 的代码。\n它们以冒号开头和结尾，并且包含 emoji 的 代码：\n1 2 3 去露营啦! {:}tent: 很快就回来. 真开心! {:}joy: 呈现的输出效果如下:\n去露营啦! ⛺ 很快就回来。\n真开心! 😂\n以下符号清单是 emoji 代码的非常有用的参考。\n表情与情感 笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent 爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes 吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face 国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ",
    "date": "2022-06-04T19:46:45+08:00",
    "updated": "2022-06-04T19:46:45+08:00"
  }, 
  {
    "permalink": "/post/markdown-syntax.html",
    "title": "Markdown 语法支持",
    "content": "仅以此篇文章来测试下在 NexT 主题中在通过 Hugo 引擎来建站时，是否支持 Markdown 文件内容中所写的各种语法，并展示下实际的效果。\n标题样式 让我们从所有可能的标题开始，在 HTML 中 \u0026lt;h1\u0026gt;-\u0026lt;h6\u0026gt;元素分别表示六个不同级别的标题样式，其中 \u0026lt;h1\u0026gt; 为最大标题，\u0026lt;h6\u0026gt;为最小标题，效果如下：\n标题 1 标题 2 标题 3 标题 4 标题 5 标题 6 段落格式 根据\rW3C 定义的\rHTML5 规范\r，HTML 文档由元素和文本组成。每个元素的组成都由一个\r开始标记\r表示，例如： \u0026lt;body\u0026gt; ，和\r结束标记\r表示，例如： \u0026lt;/body\u0026gt; 。（某些开始标记和结束标记在某些情况下可以省略，并由其他标记暗示。） 元素可以具有属性，这些属性控制元素的工作方式。例如：超链接是使用 a 元素及其 href 属性形成的。\nMarkdown 语法 1 ![图像说明](图像地址) HTML IMG 标签 1 \u0026lt;img src=\u0026#34;图像地址\u0026#34; width=\u0026#34;宽度\u0026#34; height=\u0026#34;高度\u0026#34; /\u0026gt; SVG 格式 1 \u0026lt;svg\u0026gt;xxxxxx\u0026lt;/svg\u0026gt; 列表类型 有序列表 第一个元素 第二个元素 第三个元素 无序列表 列表元素 另一个元素 和其它元素 嵌套列表 借助 HTML 的 ul 元素来实现。\n第一项\r第二项\r第二项第一个子项目\r第二项第二个子项目\r第二项第二分项第一分项\r第二项第二分项第二分项\r第二项第二分项第三分项\r第二项第三个子项目\r第二项第三分项第一分项\r第二项第三分项第二分项\r第二项第三分项第三分项\r第三项\r自定义列表 通过 HTML 的 dl 元素还支持自定义列表（表格列表）。\nHugo 目录结构\rassets\rconfig.toml\rcontent\rdata\rtheme\rstatic\rHugo 模板\r基础模板\r列表模板\r单页模板\r块引用 blockquote 元素表示从另一个源引用的内容，可以选择引用必须在 footer 或 cite 元素中，也可以选择使用注释和缩写等行内更改。\n引用文本 这一行也是同样的引用 同样你也在 blockquote 中使用 Markdown 语法书写\n带有引文的 Blockquote 元素效果。\n我的目标不是赚大钱,是为了制造好的电脑。当我意识到我可以永远当工程师时，我才创办了这家公司。\n— 史蒂夫·沃兹尼亚克\r根据 Mozilla 的网站记录，Firefox 1.0 于 2004 年发布，并取得了巨大成功。\n表格 表格并不算是 Markdown 的核心要素，但 Hugo 同样支持它。\nID 创建者 模型 年份 1 Honda Accord 2009 2 Toyota Camry 2012 3 Hyundai Elantra 2010 可以使用 : （英文格式冒号）来对表格内容进行对齐。\n表格 可以是 很酷 左对齐 居中 右对齐 左对齐 居中 右对齐 左对齐 居中 右对齐 同样也可以在表格中使用 Markdown 语法。\n表格 中 使用 Markdown 语法 斜体 粗体 中划线 代码块 Code 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 其它元素： abbr、sub、sup、kbd等等 GIF 是位图图像格式。\nH2O\nC6H12O6\nXn + Yn = Zn\n按X获胜。或按CTRL+ALT+F显示 FPS 计数器。\n比特作为信息论中的信息单位，也被称为 shannon ，以信息论领域的创始人 Claude shannon 的名字命名。\n参考：\n来自 Mainroad 主题的 Basic Elements\r内容 ",
    "date": "2022-06-03T11:52:18+08:00",
    "updated": "2022-06-03T11:52:18+08:00"
  }, 
  {
    "permalink": "/flinks.html",
    "title": "站点示例",
    "content": "如想要交换友情链接，请在评论区留下你的站点信息，格式参考如下：\n名称： NexT 主题 说明： 保持简单的易用性和强大的功能。 站标： https://hugo-next.eu.org/imgs/hugo_next_avatar.png\r网址： https://hugo-next.eu.org\r",
    "date": "0001-01-01T00:00:00+00:00",
    "updated": "0001-01-01T00:00:00+00:00"
  }
]